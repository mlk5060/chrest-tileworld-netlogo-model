<test>
	create-chrest-turtles 1[
		foreach(breeds)[
			let breed-token runresult (word (but-last (?)) "-token")

			let scene (list 
				(";-2;2") (";-1;2") (";0;2") (";1;2") (";2;2")
				(";-2;1") (";-1;1") (word breed-token ";0;1") (";1;1") (";2;1")
				(";-2;0") (word breed-token ";-1;0") (word self-token ";0;0") (word breed-token ";1;0") (";2;0")
				(";-2;-1") (";-1;-1") (word breed-token ";0;-1") (";1;-1") (";2;-1")
				(";-2;-2") (";-1;-2") (";0;-2") (";1;-2") (";2;-2")
			)

			ifelse(? = "chrest-turtles")[
				check-equal (surrounded? (scene)) (true)
			]
			[
				ifelse(? = "holes")[
					check-equal (surrounded? (scene)) (true)
				]
				[
					ifelse(? = "tiles")[
						check-equal (surrounded? (scene)) (false)
						
						foreach(breeds)[
							let other-token runresult (word (but-last (?)) "-token")
							let scene-2 (list 
								(";-2;2") (";-1;2") (word other-token ";0;2") (";1;2") (";2;2")
								(";-2;1") (";-1;1") (word breed-token ";0;1") (";1;1") (";2;1")
								(word other-token ";-2;0") (word breed-token ";-1;0") (word self-token ";0;0") (word breed-token ";1;0") (word other-token ";2;0")
								(";-2;-1") (";-1;-1") (word breed-token ";0;-1") (";1;-1") (";2;-1")
								(";-2;-2") (";-1;-2") (word other-token";0;-2") (";1;-2") (";2;-2")
							)
							ifelse(? = "holes")[
								check-equal (surrounded? (scene-2)) (false)
							]
							[
								check-equal (surrounded? (scene-2)) (true)
							]
						]
					]
					[
						error (word "Breed name '" ? "' is not checked in 'surrounded?' test.")
					]
				]
			]
		]
	]
</test>