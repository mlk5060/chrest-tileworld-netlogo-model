;==============================
;========== TEST AIM ==========
;==============================
;
; Checks the state of relevant parameters for a CHREST turtle when 'execute-next-planned-action'
; is invoked by a CHREST turtle before it has finished deliberating.
;
;======================================
;========== TEST DESCRIPTION ==========
;======================================
; 
; A CHREST turtle is set-up and relevant turtle variables are set manually to contrive a state
; that the CHREST turtle should be in after generating a plan:
; 
; - 'construct-visual-spatial-field?' is set to false.
; - 'generate-plan?' is set to false.
; - 'deliberation-finished-time' is set to 100.
; - 'plan' is populated with expected values.
;
; The 'execute-next-planned-action' procedure is then invoked.
;
;=====================================
;========== TESTS PERFORMED ==========
;=====================================
;
; Immediately following invocation of 'execute-next-planned-action', the state of the variables
; mentioned above are checked to see if they remain unchanged (which they should).
;
<test>
	create-chrest-turtles 1 [
		set action-performance-time (10000)
		set action-selection-procedure ("roulette-selection")
		set add-link-time (10000)
		set discount-rate (0.5)
		set discrimination-time (10000)
		set familiarisation-time (2000)
		set max-length-of-episodic-memory (5)
		set max-search-iteration (5)
		set number-fixations (4)
		set pattern-recognition? (true)
		set play-time (14400000.0)
		set reinforce-actions? (true)
		set reinforce-problem-solving? (true)
		set reinforcement-learning-theory ("profit_sharing_with_discount_rate") 
		set sight-radius (2)
		set time-taken-to-use-pattern-recognition (200)
		set time-taken-to-problem-solve (1000)
		set visual-spatial-field-access-time (100)
		set visual-spatial-field-empty-square-placement-time (10)
		set visual-spatial-field-object-movement-time (50)
		set visual-spatial-field-object-placement-time (25)
		set visual-spatial-field-recognised-object-lifespan (10000)
		set visual-spatial-field-unrecognised-object-lifespan (50000)
	]
	setup (true)

	ask turtle 0 [
		set construct-visual-spatial-field? (false)
		set generate-plan? (false)
		set deliberation-finished-time (100)
		set plan (list 
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
		)
		
		let expected-construct-visual-spatial-field? (false)
		let expected-generate-plan? (false)
		let expected-deliberation-finished-time (100)
		let expected-plan (list 
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
		)
		
		execute-next-planned-action
		
		check-equal 
			(construct-visual-spatial-field?) 
			(expected-construct-visual-spatial-field?) 
			("when checking 'construct-visual-spatial-field?'")

		check-equal 
			(generate-plan?) 
			(expected-generate-plan?) 
			("when checking 'generate-plan?'")

		check-equal 
			(deliberation-finished-time) 
			(expected-deliberation-finished-time) 
			("when checking 'deliberation-finished-time'")

		check-equal 
			(map ([list (chrest:ItemSquarePattern.get-as-string (item 0 ?)) (item 1 ?) ]) (plan)) 
			(map ([list (chrest:ItemSquarePattern.get-as-string (item 0 ?)) (item 1 ?) ]) (expected-plan)) 
			("when checking 'plan'")
	]
</test>