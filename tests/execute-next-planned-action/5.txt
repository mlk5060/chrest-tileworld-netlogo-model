;==============================
;========== TEST AIM ==========
;==============================
;
; Checks that relevant paramaters are set correctly when a CHREST turtle unsuccessfully 
; performs an action in its plan.
;
;======================================
;========== TEST DESCRIPTION ==========
;======================================
;
; A CHREST turtle is set-up and relevant turtle variables are set manually to contrive a state
; that the CHREST turtle should be in after generating a plan:
;
; - 'construct-visual-spatial-field?' is set to false.
; - 'generate-plan?' is set to false.
; - 'deliberation-finished-time' is set to 100.
; - 'plan' is populated with expected values.
; - 'episodic-memory' contains an episode (a string, not a real episode)
;
; The initial state of the environment is not modified so that the next action in the CHREST 
; turtle's plan will not be executed successfully.  Since the next action will be a "push-tile 
; south by 1 patch" action, the CHREST turtle's observable environment will look like the following:
;
; LEGEND
; ======
;
; C - CHREST turtle
;
; ---------------------
; |   |   |   |   |   |
; ---------------------
; |   |   |   |   |   |
; ---------------------
; |   |   | C |   |   |
; ---------------------
; |   |   |   |   |   |
; ---------------------
; |   |   |   |   |   |
; ---------------------
;
; The domain time is then set to the value of the CHREST turtle's 'deliberation-finished-time' 
; variable and the 'execute-next-planned-action' procedure is invoked.  Given that the domain
; time is equal to the CHREST turtle's 'deliberation-finished-time' variable and the environment
; is such that the action performed will be successful, the action should be performed.
;
;=====================================
;========== TESTS PERFORMED ==========
;=====================================
;
; A check is made on the state of all variables mentioned in the "TEST DESCRIPTION" section 
; after the 'execute-next-planned-action' invocation.  Most of the variables listed should 
; have modified values:
;
; - 'construct-visual-spatial-field?': set to true.
; - 'generate-plan?': set to true.
; - 'plan': should be empty.
; - 'episodic-memory': should be empty.
;
; The 'deliberation-finished-time' variable value should remain unaltered, however.
;
<test>
	;==================================;
	;== CREATE & SETUP CHREST-TURTLE ==;
	;==================================;

	create-chrest-turtles 1 [
		set action-performance-time (10000)
		set action-selection-procedure ("roulette-selection")
		set add-link-time (10000)
		set discount-rate (0.5)
		set discrimination-time (10000)
		set familiarisation-time (2000)
		set max-length-of-episodic-memory (5)
		set max-search-iteration (5)
		set number-fixations (4)
		set pattern-recognition? (true)
		set play-time (14400000.0)
		set reinforce-actions? (true)
		set reinforce-problem-solving? (true)
		set reinforcement-learning-theory ("profit_sharing_with_discount_rate")
		set sight-radius (1)
		set time-taken-to-use-pattern-recognition (200)
		set time-taken-to-problem-solve (1000)
		set visual-spatial-field-access-time (100)
		set visual-spatial-field-empty-square-placement-time (10)
		set visual-spatial-field-object-movement-time (50)
		set visual-spatial-field-object-placement-time (25)
		set visual-spatial-field-recognised-object-lifespan (10000)
		set visual-spatial-field-unrecognised-object-lifespan (50000)
	]
	setup (true)

	ask turtle 0 [

		;===========================;
		;== SET VARIABLES TO TEST ==;
		;===========================;

		set construct-visual-spatial-field? (false)
		set generate-plan? (false)
		set deliberation-finished-time (100)
		set plan (list 
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
			(list (chrest:ItemSquarePattern.new (push-tile-token) (180) (1)) (false))
		)
		set episodic-memory ([])

		;============================;
		;== SET EXPECTED VARIABLES ==;
		;============================;

		let expected-construct-visual-spatial-field? (true)
		let expected-generate-plan? (true)
		let expected-deliberation-finished-time (100)
		let expected-plan ([])
		
		;==========================================;
		;== INVOKE 'execute-next-planned-action' ==;
		;==========================================;

		set current-training-time (deliberation-finished-time)
		execute-next-planned-action
		
		;===========;
		;== TESTS ==;
		;===========;

		check-equal 
			(construct-visual-spatial-field?) 
			(expected-construct-visual-spatial-field?) 
			("when checking 'construct-visual-spatial-field?'")

		check-equal 
			(generate-plan?) 
			(expected-generate-plan?) 
			("when checking 'generate-plan?'")

		check-equal 
			(deliberation-finished-time) 
			(expected-deliberation-finished-time) 
			("when checking 'deliberation-finished-time'")

		check-equal 
			(map ([list (chrest:ItemSquarePattern.get-as-string (item 0 ?)) (item 1 ?) ]) (plan)) 
			(map ([list (chrest:ItemSquarePattern.get-as-string (item 0 ?)) (item 1 ?) ]) (expected-plan)) 
			("when checking 'plan'")

		check-equal
			(episodic-memory)
			([])
			("when checking 'episodic-memory'")
	]
</test>