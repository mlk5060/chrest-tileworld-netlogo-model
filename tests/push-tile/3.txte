;Given a situation where:
;
; - A turtle calls the 'push-tile' procedure and each value in the global 'movement-headings' variable is passed.
; - There is a tile adjacent to the turtle along the heading specified.
; - There is a non-tile and non-hole adjacent to the tile along the heading specified.
;
;This tests to see if the following conditions are true:
; 
; - The 'push-tile' procedure reports boolean 'false' for each heading specified with respect to whether the action was performed 
;   successfully.
; - The 'push-tile' procedure reports boolean 'false' for each heading specified with respect to whether a hole was filled.
; - The calling turtle is located on the patch that it was originally located on.
; - The tile that was to be pushed is located 1 patch along from the calling turtle's original location along the heading specified.

<test>
	create-chrest-turtles 1

	foreach(movement-headings)[

		repeat (length breeds * 10) [

			let chrest-turtles-original-patch 0
			let tile-who 0

			let breed-of-blocking-agent (one-of breeds)
			while[ breed-of-blocking-agent = "holes" ][
				set breed-of-blocking-agent (one-of breeds)
			]

			if(? = 0)[
				create-tiles 1 [ 
					setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) + 1 ) 
					set tile-who (who)
				]

				run (word "create-" breed-of-blocking-agent " 1 [ setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) + 2 ) ]")
			]

			if(? = 90)[
				create-tiles 1 [ 
					setxy ( ([pxcor] of turtle 0) + 1 ) ( ([pycor] of turtle 0) ) 
					set tile-who (who)
				]

				run (word "create-" breed-of-blocking-agent " 1 [ setxy ( ([pxcor] of turtle 0) + 2 ) ( ([pycor] of turtle 0) ) ]")
			]

			if(? = 180)[
				create-tiles 1 [ 
					setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) - 1 ) 
					set tile-who (who)
				]

				run (word "create-" breed-of-blocking-agent " 1 [ setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) - 2 ) ]")
			]

			if(? = 270)[
				create-tiles 1 [ 
					setxy ( ([pxcor] of turtle 0) - 1 ) ( ([pycor] of turtle 0) ) 
					set tile-who (who)
				]

				run (word "create-" breed-of-blocking-agent " 1 [ setxy ( ([pxcor] of turtle 0) - 2 ) ( ([pycor] of turtle 0) ) ]")
			]
		
			ask turtle 0 [
				set chrest-turtles-original-patch (patch-here)
			]

			ask turtle 0 [
				check-equal (push-tile (?)) ( list (false) (false) )
				check-equal (patch-here) (chrest-turtles-original-patch)
				check-equal (item (0) ([who] of turtles-on patch-at-heading-and-distance (?) (1))) (tile-who)

				ask turtles-on patch-at-heading-and-distance (?) (1)[
					die
				]

				ask turtles-on patch-at-heading-and-distance (?) (2)[
					die
				]
			]
		]
	]
</test>