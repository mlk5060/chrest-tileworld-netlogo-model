;Given the following situation:
;
; - A turtle continues to generate a plan given a scene where it is surrounded by other players resulting in a 'remain-stationary' action
;   being generated.
;
;This test ensures that the following conditions are true:
;
; - The 'generate-plan' turtle variable is set to 'false' since an end plan generation condition has been met ('remain-stationary' action
;   generated).
; - The length of the 'plan' turtle variable is equal to 1 since the configuration of the calling turtle and opponents should result 
;   in a 'remain-stationary' action being generated.  When a subsequent call to 'generate-plan' occurs, this should not result in an action 
;   being added to 'plan'.
; - The 'time-spent-deliberating-on-plan' turtle variable is set to 0 since an end plan condition has been met and this value will be reset
;   for the next plan generation cycle.
; - The 'deliberation-finished-time' is set to the sum of the current time and the 'time-taken-to-problem-solve' value.  This is because an ;   end plan generation condition has been met, only one 'generate-plan' call has been made that results in deliberation occurring and an 
;   action being produced and the turtle can not take advantage of pattern-recognition? in its deliberation process since it hasn't committed 
;   any patterns to its LTM.
; - The mind's eye of the turtle no longer exists since an end plan generation condition has been met.
; - Following the inital 'generate-plan' call and before the final 'generate-plan' call, the mind's eye content of the turtle is as expected 
;   (calling turtle is surrounded by other turtles).

<run>create-chrest-turtles 1</run>

reward-value
1.0

action-performance-time
0:10000

action-selection-procedure
0:roulette-selection

add-link-time
0:10000

discount-rate
0:0.5

discrimination-time
0:10000

familiarisation-time
0:2000

minds-eye-access-time
0:250

minds-eye-lifespan
0:10000

minds-eye-object-movement-time
0:25

minds-eye-object-placement-time
0:50

pattern-recognition?
0:true

play-time
0:14400000.0

problem-solving?
0:true

reinforce-actions?
0:true

reinforce-problem-solving?
0:true

reinforcement-learning-theory
0:profit_sharing_with_discount_rate

sight-radius
0:2

time-taken-to-use-pattern-recognition
0:200

time-taken-to-problem-solve
0:1000

visually-informed-problem-solving?
0:true

<test>
	create-chrest-turtles 1 [ setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) + 1 ) ]
	create-chrest-turtles 1 [ setxy ( ([pxcor] of turtle 0) + 1 ) ( ([pycor] of turtle 0) ) ]
	create-chrest-turtles 1 [ setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) - 1 ) ]
	create-chrest-turtles 1 [ setxy ( ([pxcor] of turtle 0) - 1 ) ( ([pycor] of turtle 0) ) ]

	ask turtle 0 [
		generate-plan
	 	set current-training-time ( current-training-time + (minds-eye-object-placement-time * 5) )

	 	let expected-minds-eye-content (list
			(";-2;-2") (";-2;-1") (";-2;0") (";-2;1") (";-2;2")
			(";-1;-2") (";-1;-1") (word chrest-turtle-token ";-1;0") (";-1;1") (";-1;2")
			(";0;-2") (word chrest-turtle-token ";0;-1") (word self-token ";0;0") (word chrest-turtle-token ";0;1") (";0;2")
			(";1;-2") (";1;-1") (word chrest-turtle-token ";1;0") (";1;1") (";1;2")
			(";2;-2") (";2;-1") (";2;0") (";2;1") (";2;2")
		)

		check-equal (chrest:get-all-minds-eye-content (report-current-time )) (expected-minds-eye-content)

	 	generate-plan

		check-equal (generate-plan?) (false)
		check-equal (length (plan)) (1)
		check-equal (time-spent-deliberating-on-plan) (0)
		check-equal (deliberation-finished-time) (report-current-time + time-taken-to-problem-solve)
		check-equal (chrest:minds-eye-exist? (report-current-time)) (false)
	]
</test>