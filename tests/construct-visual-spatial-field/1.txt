;==============================
;========== TEST AIM ==========
;==============================
;
; Given a scenario where a CHREST turtle can see an instance of each object type defined in the model, 
; is a visual-spatial field correctly constructed (is the content of the visual-spatial field what is 
; expected after retrieving all of its contents including empty squares)?
;
;======================================
;========== TEST DESCRIPTION ==========
;======================================
;
; A CHREST turtle is created and its sight-radius is set to 2 so that it can see 25 patches
; in total.  All other object types that exist in the model are then created around the
; original CHREST turtle whilst some squares remain empty. 
;
; An illustration of the original turtle's observable environment is provided below.  Each object 
; is denoted by its "who" number followed by the type of the object in parenthesis except for empty 
; patches.
;
; LEGEND
; ======
;
; - H: hole
; - O: opponent
; - T: tile
; - S: self
;
;      |------|------|------|------|------|
;   4  |      |      |      |      |      |
;      |------|------|------|------|------|
;   3  |      | 8(T) | 1(T) | 5(H) |      |
;      |------|------|------|------|------|
;   2  |      | 4(T) | 0(S) | 2(H) |      |
;      |------|------|------|------|------|
;   1  |      | 7(O) | 3(O) | 6(O) |      |
;      |------|------|------|------|------|
;   0  |      |      |      |      |      |
;      |------|------|------|------|------|
;
;         0      1      2      3      4        SCENE COORDINATES
;
<test>
	create-chrest-turtles 1 [
		set action-performance-time 10000
		set action-selection-procedure "roulette-selection"
		set add-link-time 10000
		set can-plan? (true)
		set discount-rate 0.5
		set discrimination-time 10000
		set familiarisation-time 2000
		set max-length-of-episodic-memory 5
		set max-search-iteration 5
		set number-fixations 4
		set pattern-recognition? true
		set play-time 14400000.0
		set reinforce-actions? true
		set reinforce-problem-solving? true
		set reinforcement-learning-theory "profit_sharing_with_discount_rate" 
		set sight-radius 2
		set time-taken-to-use-pattern-recognition 200
		set time-taken-to-problem-solve 1000
		set visual-spatial-field-access-time 100
		set visual-spatial-field-empty-square-placement-time 10
		set visual-spatial-field-object-movement-time 50
		set visual-spatial-field-object-placement-time 25
		set visual-spatial-field-recognised-object-lifespan 10000
		set visual-spatial-field-unrecognised-object-lifespan 50000
	]
	setup (true)

	create-tiles 1 [setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) + 1 )]
	create-holes 1 [setxy ( ([pxcor] of turtle 0) + 1 ) ( ([pycor] of turtle 0) )]
	create-chrest-turtles 1 [setxy ( ([pxcor] of turtle 0) ) ( ([pycor] of turtle 0) - 1 )]
	create-tiles 1 [setxy ( ([pxcor] of turtle 0) - 1 ) ( ([pycor] of turtle 0) )]
	create-holes 1 [setxy ( ([pxcor] of turtle 0) + 1 ) ( ([pycor] of turtle 0) + 1 )]
	create-chrest-turtles 1 [setxy ( ([pxcor] of turtle 0) + 1 ) ( ([pycor] of turtle 0) - 1 )]
	create-chrest-turtles 1 [setxy ( ([pxcor] of turtle 0) - 1 ) ( ([pycor] of turtle 0) - 1 )]
	create-tiles 1 [setxy ( ([pxcor] of turtle 0) - 1 ) ( ([pycor] of turtle 0) + 1 )]

	ask turtle 0 [
		construct-visual-spatial-field

		let visual-spatial-field ( chrest:Scene.get-as-netlogo-list ( chrest:VisualSpatialField.get-as-scene (chrest:get-attention-clock) (true) ) )

		;Scene will be encoded from top to bottom along x-axis
		let expected-visual-spatial-field ( list
			(list
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
			)
			(list
				(list (empty-patch-token) (empty-patch-token))
				(list ("7") (opponent-token))
				(list ("4") (tile-token))
				(list ("8") (tile-token))
				(list (empty-patch-token) (empty-patch-token))
			)
			(list
				(list (empty-patch-token) (empty-patch-token))
				(list ("3") (opponent-token))
				(list (word who) (self-token))
				(list ("1") (tile-token))
				(list (empty-patch-token) (empty-patch-token))
			)
			(list
				(list (empty-patch-token) (empty-patch-token))
				(list ("6") (opponent-token))
				(list ("2") (hole-token))
				(list ("5") (hole-token))
				(list (empty-patch-token) (empty-patch-token))
			)
			(list
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
				(list (empty-patch-token) (empty-patch-token))
			)
		)

		check-equal (visual-spatial-field) (expected-visual-spatial-field) ("")
	]
</test>