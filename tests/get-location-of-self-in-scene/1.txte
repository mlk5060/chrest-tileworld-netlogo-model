;Given a particular scene that is, at first, devoid of any objects this test cycles through each patch in the scene and inserts a 
;'self-token' as an object identifier on the patch.  The 'get-location-of-self-in-scene' is then passed this modified scene and the
;result should equal the modified patch contents.  The object-identifier is then removed from the patch before the next patch is processed.
<test>
	create-chrest-turtles 1 [

		let scene ( list
			(";-1;1") (";0;1") (";1;1")
			(";-1;0") (";0;0") (";1;0")
			(";-1;-1") (";0;-1") (";1;-1")
		)

		let patch-num 0
		while[patch-num < (length scene)][
			let original-patch-info (item (patch-num) (scene))
			let new-patch-info (word self-token (original-patch-info))
			set scene (replace-item (patch-num) (scene) (new-patch-info))

			check-equal (get-location-of-self-in-scene(scene)) (new-patch-info)
			
			set scene (replace-item (patch-num) (scene) (original-patch-info))
			set patch-num (patch-num + 1)
		] 
	]
</test>