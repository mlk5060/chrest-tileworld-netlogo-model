<test>
	create-chrest-turtles 1 [
		let blocked-by-holes ( list 
			(";-2;2") (";-1;2") (";0;2") (";1;2") (";2;2")
			(";-2;1") (";-1;1") (word hole-token ";0;1") (";1;1") (";2;1")
			(";-2;0") (word hole-token ";-1;0") (word self-token ";0;0") (word hole-token ";1;0") (";2;0")
			(";-2;-1") (";-1;-1") (word hole-token ";0;-1") (";1;-1") (";2;-1")
			(";-2;-2") (";-1;-2") (";0;-2") (";1;-2") (";2;-2")
		)

		let blocked-by-opponents ( list 
			(";-2;2") (";-1;2") (";0;2") (";1;2") (";2;2")
			(";-2;1") (";-1;1") (word chrest-turtle-token ";0;1") (";1;1") (";2;1")
			(";-2;0") (word chrest-turtle-token ";-1;0") (word self-token ";0;0") (word chrest-turtle-token ";1;0") (";2;0")
			(";-2;-1") (";-1;-1") (word chrest-turtle-token ";0;-1") (";1;-1") (";2;-1")
			(";-2;-2") (";-1;-2") (";0;-2") (";1;-2") (";2;-2")
		)

		let blocked-by-tiles ( list 
			(";-2;2") (";-1;2") (word tile-token ";0;2") (";1;2") (";2;2")
			(";-2;1") (";-1;1") (word tile-token ";0;1") (";1;1") (";2;1")
			(word tile-token ";-2;0") (word tile-token ";-1;0") (word self-token ";0;0") (word tile-token ";1;0") (word tile-token ";2;0")
			(";-2;-1") (";-1;-1") (word tile-token ";0;-1") (";1;-1") (";2;-1")
			(";-2;-2") (";-1;-2") (word tile-token ";0;-2") (";1;-2") (";2;-2")
		)

		let not-blocked-by-tiles ( list 
			(";-2;2") (";-1;2") (";0;2") (";1;2") (";2;2")
			(";-2;1") (";-1;1") (word tile-token ";0;1") (";1;1") (";2;1")
			(";-2;0") (word tile-token ";-1;0") (word self-token ";0;0") (word tile-token ";1;0") (";2;0")
			(";-2;-1") (";-1;-1") (word tile-token ";0;-1") (";1;-1") (";2;-1")
			(";-2;-2") (";-1;-2") (";0;-2") (";1;-2") (";2;-2")
		)

		let not-blocked ( list 
			(";-2;2") (";-1;2") (";0;2") (";1;2") (";2;2")
			(";-2;1") (";-1;1") (";0;1") (";1;1") (";2;1")
			(";-2;0") (";-1;0") (word self-token ";0;0") (";1;0") (";2;0")
			(";-2;-1") (";-1;-1") (";0;-1") (";1;-1") (";2;-1")
			(";-2;-2") (";-1;-2") (";0;-2") (";1;-2") (";2;-2")
		)

		foreach([0 90 180 270])[
			check-equal (patch-ahead-blocked? (blocked-by-holes) (?)) (true)
			check-equal (patch-ahead-blocked? (blocked-by-opponents) (?)) (true)
			check-equal (patch-ahead-blocked? (blocked-by-tiles) (?)) (true)
			check-equal (patch-ahead-blocked? (not-blocked) (?)) (false)
			check-equal (patch-ahead-blocked? (not-blocked) (?)) (false)
		]
	]
</test>