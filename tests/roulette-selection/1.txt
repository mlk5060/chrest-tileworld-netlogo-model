;==============================
;========== TEST AIM ==========
;==============================
;
; To check for correct operation of the "roulette-selection" procedure.
;
;======================================
;========== TEST DESCRIPTION ==========
;====================================== 
;
; Three inputs are passed to the "roulette-selection" procedure:
; 
; 1) A list containing two productions, both of which have values of 0.0
; 2) A list containing two productions, one with a value of 0.0 the other with a value of 1.0
; 3) A list containing three productions, one with a value of 0.0 and the others have an equal value (0.5)
;
; The "roulette-selection" procedure is only invoked once before its output is checked since the
; output should be the same no matter how many times it is invoked.  Conversely, each of the productions
; with a value of 0.5 should be returned randomly every time the "roulette-selection" procedure is 
; invoked for the third input.  Consequently, for the third input, the "roulette-selection" procedure is 
; invoked 20 times and its output after each invocation is checked.
;
;=====================================
;========== TESTS PERFORMED ==========
;=====================================
;
; For each input, the output of the "roulette-selection" procedure is checked.
;
; 1) For the first input, an empty list should be returned since no production passed has a value greater than 0.0.
; 2) For the second input, a list containing details of the second production passed in the input should be returned.
; 3) For the third input, either of the productions with value 0.5 should be returned.
;
<test>
	let productions-with-zero-values ( list 
		( list 
			(list (push-tile-token) (180) (1)) 
			(0.0)
		)
		( list
			(list (move-token) (270) (1))
			(0.0)
		)
	)

	let two-productions-one-with-non-zero-value ( list 
		( list 
			(list (push-tile-token) (180) (1)) 
			(0.0)
		)
		( list
			(list (move-token) (270) (1))
			(1.0)
		)
	)

	let three-productions-two-with-equal-non-zero-values ( list 
		( list 
			(list (push-tile-token) (180) (1)) 
			(0.0)
		)
		( list
			(list (move-token) (270) (1))
			(0.5)
		)
		( list
			(list (move-token) (270) (1))
			(0.5)
		)
	)
	
	create-chrest-turtles 1[
		check-equal (roulette-selection (productions-with-zero-values)) ([]) ("")
		check-equal 
			(roulette-selection (two-productions-one-with-non-zero-value)) 
			( (list (move-token) (270) (1)) )
			("")

		repeat 20[
			let action-selected (roulette-selection (three-productions-two-with-equal-non-zero-values))
			check-equal
				(action-selected = (list (move-token) (270) (1)) or action-selected = (list (move-token) (270) (1)) ) 
				( true ) 
				("")
		]
	]
</test>